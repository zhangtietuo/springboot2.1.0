1	Lambda表达式 也可称为闭包，它是推动 Java 8 发布的最重要新特性。Lambda 允许把函数作为一个方法的参数（函数作为参数传递进方法中）
                可选类型声明：不需要声明参数类型，编译器可以统一识别参数值。
                可选的参数圆括号：一个参数无需定义圆括号，但多个参数需要定义圆括号。
                可选的大括号：如果主体包含了一个语句，就不需要使用大括号。
                可选的返回关键字：如果主体只有一个表达式返回值则编译器会自动返回值，大括号需要指定明表达式返回了一个数值。
                惰性求值
2	方法引用 ::
3	函数式接口 http://www.runoob.com/java/java8-functional-interfaces.html
4	默认方法 default
        为什么要有这个特性？
        首先，之前的接口是个双刃剑，好处是面向抽象而不是面向具体编程，缺陷是，当需要修改接口时候，需要修改全部实现该接口的类，
        目前的java 8之前的集合框架没有foreach方法，通常能想到的解决办法是在JDK里给相关的接口添加新的方法及实现。
        然而，对于已经发布的版本，是没法在给接口添加新方法的同时不影响已有的实现。所以引进的默认方法。他们的目的是为了解决接口的修改与现有的实现不兼容的问题。
5	Stream http://www.runoob.com/java/java8-streams.html
6	Optional 类
7	Nashorn, JavaScript 引擎
8	新的日期时间 API
9	Base64